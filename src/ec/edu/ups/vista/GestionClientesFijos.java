/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.vista;

import ec.edu.ups.controlador.controladorClienteFijo;
import ec.edu.ups.controlador.controladorEspacios;
import ec.edu.ups.controlador.controladorIngreso;
import ec.edu.ups.controlador.controladorTarifa;
import ec.edu.ups.modelo.ClienteFijo;
import ec.edu.ups.modelo.Ingresos;
import ec.edu.ups.modelo.Tarifa;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public final class GestionClientesFijos extends javax.swing.JInternalFrame {
    private String ruta ;
    private int id;
    private final controladorEspacios controladorEspacios;
    private final controladorClienteFijo controladorClienteFijo;
    private final controladorTarifa controladorTarifa;
    private controladorIngreso controladorIngreso;
    private final Calendar fechaRegistro;
    int anio;
    int mes;
    int dia;
    
    int numMeses=0;
    
    public GestionClientesFijos(controladorClienteFijo controladorClienteFijo, controladorTarifa controladorTarifa,controladorEspacios controladorEspacios,controladorIngreso controladorIngreso) {
        initComponents();
        this.controladorEspacios=controladorEspacios;
        this.controladorClienteFijo=controladorClienteFijo;
        this.controladorTarifa=controladorTarifa;
        this.controladorIngreso=controladorIngreso;
        fechaRegistro = new GregorianCalendar();
        anio=fechaRegistro.get(Calendar.YEAR);
        mes=fechaRegistro.get(Calendar.MONTH);
        dia=fechaRegistro.get(Calendar.DAY_OF_MONTH);
        ruta="datos/ClienteFijo.obj";
        //controladorEspacios.cargarEspaciosDefault();
         
        try {
            controladorIngreso.cargarDatos();
            controladorTarifa.cargarDatos();
            controladorClienteFijo.cargarDatos();
            controladorEspacios.cargarDatos();
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
        }
       cargarCbxEspaciosDisp();
    }
    /**
     * This method is called from within the constructor to initialize the form.WARNING: Do NOT modify this code.The content of this method is always
 regenerated by the Form Editor.
     * @param anio
     * @return 
     */
    @SuppressWarnings("unchecked")
    public boolean isBisiesto(int anio){
        
        
        return ((anio%4)==0 && (anio%100)!=0||(anio%400)==0);
    
    }
    public int dias_mes(int mes, int anio){
        
        int dias = 31;
        
        if(mes==4|| mes==6 || mes==9||mes==11){
        dias=30;
        }else if(mes==2){
        if(isBisiesto(anio)){
        dias=29;
        }else{
        dias=28;
        }
        }
        
        return dias;
    
    }
    
  public  void incrementarMeses(int numMeses){
      int cont=0;
        int dias=(int) (numMeses*30.4375);
       while (cont<=dias){
      dia++;
      
      if(dia>dias_mes(mes,anio)){
      dia=1;
      mes++;
      if(mes>12){
        mes=1;
        anio++;
      }
      }
      cont++;
      } 
     }
       
     
       
      
  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtAbono = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxAutomovil = new javax.swing.JComboBox<>();
        cbxTarifa = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientesFijos = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbxEspacioAsignar = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtEspActual = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Gestion Clientes Fijos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informacion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel1.setToolTipText("");
        jPanel1.setName(""); // NOI18N

        txtAbono.setText("0.0");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Tipo de Vehiculo");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Tipo de Tarifa");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Abono ($)");

        cbxAutomovil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Automovil", "Motocicleta", "Pesado" }));

        cbxTarifa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mensual" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbxTarifa, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxAutomovil, javax.swing.GroupLayout.Alignment.LEADING, 0, 97, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAbono, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbxAutomovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAbono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel5.setToolTipText("");
        jPanel5.setName(""); // NOI18N

        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setText("Cedula:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setText("Nombre:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setText("Apellido:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Direccion:");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Telefono");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel13))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        btnGuardar.setBackground(new java.awt.Color(0, 51, 255));
        btnGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("AGREGAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(0, 51, 255));
        btnLimpiar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(0, 51, 255));
        btnActualizar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("MODIFICAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnListar.setBackground(new java.awt.Color(0, 51, 255));
        btnListar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnListar.setForeground(new java.awt.Color(255, 255, 255));
        btnListar.setText("LISTAR");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 51, 255));
        btnEliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista Clientes Fijos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        tblClientesFijos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cedula", "Nombre", "Apellido", "Direccion", "Telefono", "Tipo Vehiculo", "Tipo Tarifa", "Abono ($)", "Fecha Expiracion Pago", "Multa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblClientesFijos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesFijosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientesFijos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Asignar Espacio de Parqueo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel6.setToolTipText("");
        jPanel6.setName(""); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Espacios disponibles:");

        cbxEspacioAsignar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50" }));
        cbxEspacioAsignar.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        cbxEspacioAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEspacioAsignarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(cbxEspacioAsignar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbxEspacioAsignar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Espacio Asignado Actual", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel7.setToolTipText("");
        jPanel7.setName(""); // NOI18N

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setText("Espacio:");

        txtEspActual.setText("Ninguno");
        txtEspActual.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(txtEspActual, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtEspActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public Calendar calcularFechaExpiracionPago(double abono,ClienteFijo clienteFijo,Tarifa tarifa){
     double valorTarifa=0;
     
        switch (clienteFijo.getTipoVehivulo()) {
            case "Motocicleta":
                valorTarifa=tarifa.getMensualM();
                break;
            case "Automovil":
                valorTarifa=tarifa.getMensualA();
                break;
            default:
                valorTarifa=tarifa.getMensualP();
                break;
        }
        numMeses = (int) (abono /valorTarifa);
       
       incrementarMeses(numMeses);
       Calendar fechaExp = new GregorianCalendar();
       fechaExp.set(anio, mes+1, dia-1);
        return fechaExp;
 
 }
 
 public double calcularSaldoAbono (double abono,ClienteFijo clienteFijo,Tarifa tarifa){
     double valorTarifa=0;
     double saldo=abono;
        switch (clienteFijo.getTipoVehivulo()) {
            case "Motocicleta":
                valorTarifa=tarifa.getMensualM();
                break;
            case "Automovil":
                valorTarifa=tarifa.getMensualA();
                break;
            default:
                valorTarifa=tarifa.getMensualP();
                break;
        }
    
     while (saldo>=0){
         if(saldo<valorTarifa){
    valorTarifa=valorTarifa-saldo;
    }
     saldo=saldo-valorTarifa;
     
     }
     
        return saldo+valorTarifa;
 
 
 }
 public void limpiar(){
     //.setText("");
 txtCedula.setText("");
 txtNombre.setText("");
 txtApellido.setText("");
 txtDireccion.setText("");
 txtTelefono.setText("");
 cbxAutomovil.setSelectedItem(0);
 cbxTarifa.setSelectedItem(0);
 txtAbono.setText("");
 txtEspActual.setText("Ninguno");
 /*txtCedula.getText().isEmpty()||
 txtNombre.getText().isEmpty()||
 txtApellido.getText().isEmpty()||
 txtDireccion.getText().isEmpty()||
 txtTelefono.getText().isEmpty()||
 txtAbono.getText().isEmpty())*/
 }
 public boolean validarCampos(){
     if( txtCedula.getText().isEmpty()||
 txtNombre.getText().isEmpty()||
 txtApellido.getText().isEmpty()||
 txtDireccion.getText().isEmpty()||
 txtTelefono.getText().isEmpty()||
 txtAbono.getText().isEmpty())
     
     {
           JOptionPane.showMessageDialog(this, "CAMPOS VACIOS");
     return false;
     
     }else{
     return true;
     }
        
       
 
 }
 public void limpiarCbx(){
 cbxEspacioAsignar.removeAllItems();

 
 }
 
 public void cargarCbxEspaciosDisp(){
      limpiarCbx();
      controladorEspacios.espaciosDisponibles().forEach(espacios -> {
          cbxEspacioAsignar.addItem(espacios);
        });
 
 }
 
 public void cargarClientesFijosTbl(){

     String fecha="";
   DefaultTableModel modelo = (DefaultTableModel) tblClientesFijos.getModel();
        modelo.setRowCount(0);
        if (controladorClienteFijo.clientesFijos() != null) {
            for (ClienteFijo cf : controladorClienteFijo.clientesFijos()) {
                Calendar f =cf.getFechaExpiracion();
                fecha=f.get(Calendar.DAY_OF_MONTH)+"/"+f.get(Calendar.MONTH)+"/"+f.get(Calendar.YEAR);
                Object[] rowData = {cf.getId(),cf.getCedula(),cf.getNombre(),cf.getApellido(),cf.getDireccion(),cf.getTlf(),cf.getTipoVehivulo(),cf.getTipoTarifa(),cf.getAbono(),fecha,cf.getMulta()};
                modelo.addRow(rowData);
                tblClientesFijos.setModel(modelo);
            }
        } else {
            System.out.println("LISTA VACIA");
        }
 }
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      
        if(validarCampos()){
             double valorTarifa=0;
            Tarifa tarifa1=null;
        for (Tarifa tarifa : controladorTarifa.tarifas()) {
                tarifa1=tarifa;
            }
            if(cbxAutomovil.getSelectedItem().toString().trim().equals("Automovil")){
            valorTarifa=tarifa1.getMensualA();
            }else if(cbxAutomovil.getSelectedItem().toString().trim().equals("Motocicleta")){
            valorTarifa=tarifa1.getMensualM();
            }else {
            valorTarifa=tarifa1.getMensualP();
            }
            if(Double.parseDouble(txtAbono.getText().trim())>=valorTarifa){
             ClienteFijo cliente = new ClienteFijo(controladorClienteFijo.generarId(),cbxAutomovil.getSelectedItem().toString().trim(),cbxTarifa.getSelectedItem().toString().trim()
                    ,Double.parseDouble(txtAbono.getText().trim()),null,0,txtCedula.getText().trim(),txtNombre.getText().trim(), txtApellido.getText().trim(),txtDireccion.getText().trim(),txtTelefono.getText().trim());
            
          cliente.setFechaExpiracion(calcularFechaExpiracionPago(Double.parseDouble(txtAbono.getText().trim()),cliente,tarifa1));
          
          cliente.setAbono(calcularSaldoAbono (Double.parseDouble(txtAbono.getText().trim()),cliente,tarifa1));
          
          cliente.setEspacioParqueo( Integer.parseInt(cbxEspacioAsignar.getSelectedItem().toString().trim()));
          
           double multa= controladorClienteFijo.generarMulta(cliente);
               cliente.setMulta(multa);
               
               if(cliente.getMulta()!=0){
               Ingresos ingreso = new Ingresos();
            ingreso.setId(controladorIngreso.generarId());
            Calendar fh= new GregorianCalendar();
            ingreso.setFechaHora(fh);
            ingreso.setDescripcion(" Paga multa : Cliente "+cliente.getNombre()+" "+cliente.getApellido()+ " con CI:  "+cliente.getCedula()+"");
            ingreso.setIngreso(cliente.getMulta());
            controladorIngreso.crear(ingreso);
               }
          
          if(controladorEspacios.AsignarEspacio(Integer.parseInt(cbxEspacioAsignar.getSelectedItem().toString().trim()),""+cliente.getId())){
                try {
                    System.out.println("SE ASIGNO ESPACIO CORRECTAMENTE AL OBJETO "+cliente);
                    controladorEspacios.guardarDatos();
                } catch (IOException ex) {
                    Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
                }
          }
   
        if(controladorClienteFijo.crear(cliente)){
            Ingresos ingreso = new Ingresos();
            ingreso.setId(controladorIngreso.generarId());
            Calendar fh= new GregorianCalendar();
            ingreso.setFechaHora(fh);
            ingreso.setDescripcion("Nuevo Cliente "+cliente.getNombre()+" "+cliente.getApellido()+ " con CI:  "+cliente.getCedula());
            ingreso.setIngreso(cliente.getAbono());
            controladorIngreso.crear(ingreso);
             JOptionPane.showMessageDialog(this, "Cliente registrado con exito");
             
             
                 try {
                     controladorIngreso.guardarDatos("datos/Ingresos.obj");
                 } catch (IOException ex) {
                     Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
                 }
           try {
                    controladorClienteFijo.guardarDatos(ruta);
                    
                   
                } catch (IOException ex) {
                    Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
                }
        }else{
        JOptionPane.showMessageDialog(this, "Error al crear Cliente");
        }
        }else{
            JOptionPane.showMessageDialog(this, "No se pueden ingresar abonos menores al mensual");
            }
        cargarCbxEspaciosDisp();
        cargarClientesFijosTbl();
            
            }
            

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
 if(validarCampos()){
                Tarifa tarifa1=null;
        for (Tarifa tarifa : controladorTarifa.tarifas()) {
                tarifa1=tarifa;
            }
            ClienteFijo cliente = new ClienteFijo(id,cbxAutomovil.getSelectedItem().toString().trim(),cbxTarifa.getSelectedItem().toString().trim()
                    ,Double.parseDouble(txtAbono.getText().trim()),null,0,txtCedula.getText().trim(),txtNombre.getText().trim(), txtApellido.getText().trim(),txtDireccion.getText().trim(),txtTelefono.getText().trim());
            
          cliente.setFechaExpiracion(calcularFechaExpiracionPago(Double.parseDouble(txtAbono.getText().trim()),cliente,tarifa1));
          
          cliente.setAbono(calcularSaldoAbono (Double.parseDouble(txtAbono.getText().trim()),cliente,tarifa1));
          
          cliente.setEspacioParqueo( Integer.parseInt(cbxEspacioAsignar.getSelectedItem().toString().trim()));
             
          double multa= controladorClienteFijo.generarMulta(cliente);
               cliente.setMulta(multa);
               
                   if(cliente.getMulta()!=0){
               Ingresos ingreso = new Ingresos();
            ingreso.setId(controladorIngreso.generarId());
            Calendar fh= new GregorianCalendar();
            ingreso.setFechaHora(fh);
            ingreso.setDescripcion(" Paga multa : Cliente "+cliente.getNombre()+" "+cliente.getApellido()+ " con CI:  "+cliente.getCedula()+"");
            ingreso.setIngreso(cliente.getMulta());
            controladorIngreso.crear(ingreso);
               }
        if(controladorClienteFijo.actualizar(cliente)){
            Ingresos ingreso = new Ingresos();
            ingreso.setId(controladorIngreso.generarId());
            Calendar fh= new GregorianCalendar();
            ingreso.setFechaHora(fh);
            ingreso.setDescripcion(" Cliente Abona "+cliente.getNombre()+" "+cliente.getApellido()+ " con CI:  "+cliente.getCedula());
            ingreso.setIngreso(cliente.getAbono());
            controladorIngreso.crear(ingreso);
            controladorEspacios.AsignarEspacio(Integer.parseInt(txtEspActual.getText().trim()), "");
            if(controladorEspacios.AsignarEspacio(Integer.parseInt(cbxEspacioAsignar.getSelectedItem().toString().trim()), txtCedula.getText().trim())){
                try {
                    System.out.println("SE ACTUALIZO ESPACIO CORRECTAMENTE AL OBJETO "+cliente);
                    controladorEspacios.guardarDatos();
                } catch (IOException ex) {
                    Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
                }
          }
                try {
                    controladorIngreso.guardarDatos("datos/Ingresos.obj");
                    controladorClienteFijo.guardarDatos(ruta);
                    controladorEspacios.guardarDatos();
                    JOptionPane.showMessageDialog(this, "Datos actualizados con exito");
                } catch (IOException ex) {
                    Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        }
        cargarCbxEspaciosDisp();
        cargarClientesFijosTbl();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       if(validarCampos()){
             int d = JOptionPane.showConfirmDialog(this, "Esta seguro de eliminar el cliente con cedula " + txtCedula.getText().trim());
        if (d == JOptionPane.YES_OPTION) {
     
        ClienteFijo comparar = new ClienteFijo(id,null,null,null,null,0,null,null,null,null,null);
        Optional<ClienteFijo> cf = controladorClienteFijo.buscar(comparar);
        ClienteFijo c = cf.get();
        
        if(controladorClienteFijo.eliminar(c)){
            try {
                controladorEspacios.AsignarEspacio(Integer.parseInt(txtEspActual.getText().trim()), "");
                controladorClienteFijo.guardarDatos(ruta);
                controladorEspacios.guardarDatos();
            } catch (IOException ex) {
                Logger.getLogger(GestionClientesFijos.class.getName()).log(Level.SEVERE, null, ex);
            }
             JOptionPane.showMessageDialog(this, "eliminado exitosamente");
        }else{
         JOptionPane.showMessageDialog(this, "no se pudo eliminar ERROR");
        }
       }
        
    }//GEN-LAST:event_btnEliminarActionPerformed
    }
    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
    cargarCbxEspaciosDisp();        
    cargarClientesFijosTbl();
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaActionPerformed

    private void cbxEspacioAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEspacioAsignarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxEspacioAsignarActionPerformed

    private void tblClientesFijosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesFijosMouseClicked
       
        int index = tblClientesFijos.getSelectedRow();
        id = Integer.parseInt("" + tblClientesFijos.getValueAt(index, 0));
        String cedula = "" + tblClientesFijos.getValueAt(index, 1);
        String nombre = "" + tblClientesFijos.getValueAt(index, 2);
        String apellido = "" + tblClientesFijos.getValueAt(index, 3);
        String direccion = "" + tblClientesFijos.getValueAt(index, 4);
        String telefono = "" + tblClientesFijos.getValueAt(index, 5);
        String tipoVehiculo =""+tblClientesFijos.getValueAt(index, 6);
        String tipoTarifa =""+tblClientesFijos.getValueAt(index, 7);
        double abono=Double.parseDouble(""+tblClientesFijos.getValueAt(index, 8));
        
        
        if(tipoVehiculo.trim().equals("Automovil")){
       cbxAutomovil.setSelectedItem(0);
       
       }else if(tipoVehiculo.trim().equals("Motocicleta")){
          cbxAutomovil.setSelectedItem(1);
        }else{
         cbxAutomovil.setSelectedItem(2);
       }
        if(tipoTarifa.trim().equals("Mensual")){
        cbxTarifa.setSelectedItem(0);
        }
 txtCedula.setText(cedula);
 txtNombre.setText(nombre);
 txtApellido.setText(apellido);
 txtDireccion.setText(direccion);
 txtTelefono.setText(telefono);
 txtAbono.setText(""+abono);
 ClienteFijo comparar = new ClienteFijo(id,null,null,null,null,0,null,null,null,null,null);
        Optional<ClienteFijo> cf = controladorClienteFijo.buscar(comparar);
        ClienteFijo c = cf.get();
        txtEspActual.setText(""+c.getEspacioParqueo());

        
        
    }//GEN-LAST:event_tblClientesFijosMouseClicked

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        cargarCbxEspaciosDisp();
        cargarClientesFijosTbl();
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnListar;
    private javax.swing.JComboBox<String> cbxAutomovil;
    private javax.swing.JComboBox<String> cbxEspacioAsignar;
    private javax.swing.JComboBox<String> cbxTarifa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClientesFijos;
    private javax.swing.JTextField txtAbono;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEspActual;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
